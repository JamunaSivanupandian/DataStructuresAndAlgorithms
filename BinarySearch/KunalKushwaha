#Binary Search

It is used to find target in sorted array.

Algorithm:-
->Find the middle element(index) of an array.
->if target > middle then search in right
  else in left 
-> if middle element equals to target element 
  then element is found


TIME COMPLEXITY :-
BEST CASE  -  linear o(1) constant ->element found at first middle element
other than first 
WORST CASE -  O(log n)


CODE:-
public class BinarySearch{
      public static void main(String[] args){
          int arr[]={1,2,3,4,5,6,9};
          int target = 2;
          int ans=binarySearch(arr,target);
          system.out.println(ans);
      }
      public static int binarySearch(int[] arr,int target){
            int start=0;
            int end = arr.length-1;
            //In java,Integer has fixed size so,we can use the start+(end-start)/2;
            
            while(start<=end){
                int mid = start+(end-start)/2;
                if(target > arr[mid]){
                   start=mid+1;
                }
                else if(target < arr[mid]){
                  end=mid-1;
                }
                else{
                   return mid;
                }
            }
      //Element not Found
      return -1;
    } 
}
